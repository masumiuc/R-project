library(ggplot2)
print("hello world")
#Here is an example of a variable
first_veriable <-"This is my variable"
second_variable <- 12.5
vec_1 <- c(13, 48.5, 71, 101.5, 2)
vec_1
vec_1
typeof(c(5L, 6L))
typeof(c(5, 6, 5.7, 6.4))
typeof(c("Masum", "Sawda", "Salma"))
typeof(c(4,5,7,5,4))
v1
v1 <- c(5L, 6L)
v1
length(v1)
is.integer(v1)
is.integer(v1)
is.character(v1)
var1 <- (list(1,3,4,"Masum", TRUE))
list(var1)
lis1 <- (list(1,3,4,"Masum", TRUE))
list(lis1)
name(lis1 <- list(1,3,4,"Masum", TRUE))
name(lis1 <- c(1,3,4,"Masum", TRUE))
names(lis1 <- list(1,3,4,"Masum", TRUE))
lis1
names(lis1) <- list(1,3,4,"Masum", TRUE)
lis1
class(lis1)
is.list(lis1)
lis1[[3]]
lis1[[1:3]]
lis1[1:3]
str(lis1)
num <- 1:100
num
num <- 1:7
num
product <- c("Laptop", "Mobile", "WebCam")
l1 <- list(num,product)
l1
l1[1]
l1[[1]]
install.packages(tidyverse)
install.packages("tidyverse")
library(tidyverse)
library(lubridate)
today()
now()
ymd()
ymd(2022-07-22)
ymd("2022-07-22")
mdy("2021-03-22")
mdy("January-03-22")
dmy(20210122)
dmy(030320)
file.create ("newfile.txt")
file.copy("newfile.txt", "google")
unlink("newfile.txt")
unlink("newfile.txt")
install.packages()
installed.packages()
library(class)
tidyverse_update()
update.packages()
?
data("ToothGrowth")
data("ToothGrowth")
View(ToothGrowth)
library(dplyr)
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
library(dplyr)
filtered_tg <- filter(ToothGrowth, does==0.5)
rlang::last_trace()
filtered_tg <- filter.data.frame(ToothGrowth, does==0.5)
filtered_tg <- filter(ToothGrowth, dose==0.5)
filtered_tg <- filter(ToothGrowth, dose==0.5)
filtered_tg <- filter(ToothGrowth, dose==0.5)
filtered_tg <- filter(ToothGrowth,dose==0.5)
View(filtered_tg)
View(filtered_tg)
arrange(filtered_tg,len)
#same thing we will do by nested function # In programming NESTED describes code that performs a particular function and is contained within code that performs a broader function.
arrange(filter(ToothGrowth, dose==0.5)len)
#same thing we will do by nested function # In programming NESTED describes code that performs a particular function and is contained within code that performs a broader function.
arrange(filter(ToothGrowth, dose==0.5),len)
filtered_toothgrowth <- ToothGrowth %>%
filter(dose==0.5) %>%
arrange(len)
view(filtered_toothgrowth)
view(filtered_toothgrowth)
View(filtered_toothgrowth)
View(filtered_toothgrowth)
View(filtered_tg)
View(filtered_tg)
filtered_toothgrowth <- ToothGrowth %>%
filter(dose==0.5) %>%
group_by(supp) %>%
summarise(mean_len=mean(len,na.rm = T),.groups = "drop")
filtered_toothgrowth <- ToothGrowth %>%
filter(dose==0.5) %>%
group_by(supp) %>%
summarise(mean_len=mean(len,na.rm = T),.groups = "drop")
filtered_toothgrowth
filtered_toothgrowth1 <- ToothGrowth %>%
filter(dose==0.5) %>%
arrange(len)
View(filtered_toothgrowth)
filtered_toothgrowth1 <- ToothGrowth %>%
filter(dose==0.5) %>%
arrange(len)
View(filtered_toothgrowth)
View(filtered_toothgrowth1)
filtered_toothgrowth1
filtered_toothgrowth
View(filtered_tg)
filtered_toothgrowth <- ToothGrowth %>%
filter(dose==0.5) %>%
group_by(supp) %>%
summarise(mean_len=mean(len,na.rm = T))
filtered_toothgrowth
filtered_toothgrowth <- ToothGrowth %>%
filter(dose==0.5) %>%
summarise(mean_len=mean(len,na.rm = T))
filtered_toothgrowth
filtered_toothgrowth <- ToothGrowth %>%
filter(dose==0.5) %>%
summarise(mean_len=mean(len,na.rm = T),.groups = "drop")
filtered_toothgrowth
filtered_toothgrowth <- ToothGrowth %>%
filter(dose==0.5) %>%
group_by(supp) %>%
summarise(mean_len=mean(len,na.rm = T),.groups = "drop")
filtered_toothgrowth
View(filtered_toothgrowth)
filtered_toothgrowth <- ToothGrowth %>%
filter(dose==0.5) %>%
group_by(supp) %>%
summarise(mean_len=mean(len,na.rm = T),.groups = "keep")
View(filtered_toothgrowth)
filtered_toothgrowth <- ToothGrowth %>%
filter(dose==0.5) %>%
group_by(supp) %>%
summarise(mean_len=mean(len,na.rm = T),.groups = "drop")
View(filtered_toothgrowth)
filtered_toothgrowth <- ToothGrowth %>%
filter(dose==0.5) %>%
group_by(supp) %>%
summarise(mean_len=mean(len,na.rm = T))
View(filtered_toothgrowth)
#Code from ChatGPT
result <- ToothGrowth %>%
filter(dose == 0.5) %>%
group_by(supp) %>%
summarise(mean_len = mean(len, na.rm = T)) %>%
arrange(supp)
result
result <- ToothGrowth %>%
filter(dose == 0.5) %>%
group_by(supp) %>%
summarise(mean_len = mean(len, na.rm = T)) %>%
result
result <- ToothGrowth %>%
filter(dose == 0.5) %>%
group_by(supp) %>%
summarise(mean_len = mean(len, na.rm = T)) %>%
#Code from ChatGPT I asked (if I exclude the line (,.groups = "drop") from my command it results same with or without this line)
result <- ToothGrowth %>%
filter(dose == 0.5) %>%
group_by(supp) %>%
summarise(mean_len = mean(len, na.rm = T)) %>%
View(result)
#Code from ChatGPT I asked (if I exclude the line (,.groups = "drop") from my command it results same with or without this line)
result <- ToothGrowth %>%
filter(dose == 0.5) %>%
group_by(supp) %>%
summarise(mean_len = mean(len, na.rm = T)) %>%
arrange(supp)
View(result)
result <- ToothGrowth %>%
filter(dose == 0.5) %>%
group_by(supp) %>%
summarise(mean_len = mean(len, na.rm = T)) %>%
group_by(supp)
View(result)
result <- ToothGrowth %>%
filter(dose == 0.5) %>%
group_by(supp) %>%
summarise(mean_len = mean(len, na.rm = T))
View(result)
er(1) <- c(1,2,3)
er(1)
View(er(1))
er(1) <- c(1,2,3)
data(dimonds)
install.packages("tidyverse")
library(tidyverse)
data("diamonds")
View(diamonds)
head(diamonds)
# we could use the structure function str() to highlight the structure of this data frame.
str(diamonds)
colnames(diamonds)
mutate(diamonds, carat_2= carat*100)
Wherever data comes from, you will almost always want to store it in a data frame object to work with it. Now, you can start creating and exploring data frames with the code chunks in the RMD space. To interact with the code chunk, click the green arrow in the top-right corner of the chunk. The executed code will appear in the RMD space and your console.
mutate(diamonds, carat_2= carat*100)
data("diamonds")
library(tidyverse)
data("diamonds")
mutate(diamonds, carat_2= carat*100)
as_tibble(dimonds)
library(tidyverse)
data("diamonds")
as_tibble(diamonds)
data()
data("mtcars")
mtcars
View(mtcars)
readr_example()
library(tidyr)
readr_example()
readr_example()
library(tidyverse)
readr_example()
readr_example("mtcars.csv")
read.csv(readr_example("mtcars.csv"))
readr_example("mtcars.csv")
read.csv(readr_example("mtcars.csv"))
spec("mtcars.csv")
spec(mtcars.csv)
spec()
spec(mtcars)
spec("mtcars")
read.csv(readr_example("mtcars.csv"))
summary(mtcars)
glimpse(mtcars)
library(readxl)
readxl_example()
read_excel(readxl_example(type-me.xlsx))
read_excel(readxl_example("type-me.xlsx"))
excel_sheets(readxl_example("type-me.xlsx"))
excel_sheets(readxl_example("type-me.xlsx"), sheet = "numeric_coercion")
excel_sheets(readxl_example("type-me.xlsx"), sheet = "numeric_coercion")
excel_sheets(readxl_example("type-me.xlsx"), sheet = "numeric_coercion")
read_excel(readxl_example("type-me.xlsx"), sheet = "numeric_coercion")
